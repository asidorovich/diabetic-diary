/*
Deployment script for DiabeticDiary

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DiabeticDiary"
:setvar DefaultFilePrefix "DiabeticDiary"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[Person]...';


GO
CREATE TABLE [dbo].[Person] (
    [ID]        INT          IDENTITY (1, 1) NOT NULL,
    [FirstName] VARCHAR (20) NOT NULL,
    [LastName]  VARCHAR (20) NULL,
    CONSTRAINT [PK_Person] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[PersonRecord]...';


GO
CREATE TABLE [dbo].[PersonRecord] (
    [ID]                  INT                IDENTITY (1, 1) NOT NULL,
    [PersonId]            INT                NOT NULL,
    [RecordTime]          DATETIMEOFFSET (2) NOT NULL,
    [Insulin]             DECIMAL (4, 2)     NULL,
    [Carbohydrates]       DECIMAL (4, 2)     NULL,
    [BloodGloucoseBgm]    DECIMAL (4, 2)     NULL,
    [BloodGloucoseCgm]    DECIMAL (4, 2)     NULL,
    [BloodGloucoseCgmRaw] DECIMAL (4, 2)     NULL,
    [Note]                VARCHAR (256)      NULL,
    CONSTRAINT [PK_PersonRecord] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[FK_PersonRecord_Person]...';


GO
ALTER TABLE [dbo].[PersonRecord] WITH NOCHECK
    ADD CONSTRAINT [FK_PersonRecord_Person] FOREIGN KEY ([PersonId]) REFERENCES [dbo].[Person] ([ID]);


GO
PRINT N'Creating [dbo].[PersonRecord_GetAll]...';


GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
CREATE PROCEDURE [dbo].[PersonRecord_GetAll]
	@PersonId int
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

    select ID
			, PersonId
			, RecordTime
			, Insulin
			, Carbohydrates
			, BloodGloucoseBgm
			, BloodGloucoseCgm
			, BloodGloucoseCgmRaw
			, Note
	from [dbo].[PersonRecord]

END
GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[PersonRecord] WITH CHECK CHECK CONSTRAINT [FK_PersonRecord_Person];


GO
PRINT N'Update complete.';


GO
